{
  "name": "tree-stickies",
  "productName": "TreeStickies",
  "version": "0.1.25",
  "description": "TreeStickies",
  "main": "dist/main.js",
  "scripts": {
    "rebuild-native": "npx electron-rebuild -f",
    "copy-static": "rm -r dist && cp -r html dist && cp -r external_modules/fontawesome dist/ && cp -r assets dist/ && cp ./node_modules/react/umd/react.production.min.js ./dist/settings/ && cp ./node_modules/react-dom/umd/react-dom.production.min.js ./dist/settings",
    "lint": "eslint --fix --ext .ts .",
    "tsc-iframe": "npx tsc -p ./tsconfig.iframe.json",
    "webpack-renderer": "npx webpack --config webpack.renderer.production.js",
    "webpack-renderer-debug": "cross-env NODE_ENV=development npx webpack --config webpack.renderer.development.js",
    "webpack-settings": "npx webpack --config webpack.settings.production.js",
    "tsc-main": "tsc -p tsconfig.main.production.json",
    "tsc-main-debug": "tsc -p tsconfig.main.development.json",
    "/* debug-main */": "/* Please launch [Main (tree-stickies)] from VSCode debugger after debug-main-and-renderer */",
    "/* debug-renderer */": "/* Please launch [Renderer (tree-stickies)] from VSCode debugger after tsc-iframe, debug-main-and-renderer and [Main (tree-stickies)] */",
    "debug-main-and-renderer": "npx npm-run-all --npm-path npm --parallel webpack-renderer-debug tsc-main-debug",
    "debug-settings": "cross-env NODE_ENV=development SETTINGS_DIALOG=open npx webpack --config webpack.settings.development.js --watch",
    "/* notice for compile-all */": "/* tsc in compile-main must be run finally because the .ts files under modules_common are temporally overwritten by tsc-iframe command and webpacks",
    "/* notice for compile-all (2) */": "/* Can it be parallelize?",
    "compile-all": "npx npm-run-all --npm-path npm --parallel tsc-iframe webpack-settings webpack-renderer tsc-main",
    "compile-all-clean": "npm run copy-static && npm run lint && npm run compile-all",
    "start-all": "npm run compile-all && npx electron .",
    "start-all-clean": "npm run compile-all-clean && npx electron .",
    "start": "npm run start-all",
    "make": "npm run compile-all-clean && rm -rf ./installer/* && node --experimental-modules --experimental-json-modules packager.mjs",
    "clear": "npx rimraf node_modules && rm package-lock.json"
  },
  "keywords": [],
  "author": {
    "name": "Hidekazu Kubota",
    "email": "hidekazu.kubota@gmail.com"
  },
  "license": "UNLICENSED",
  "devDependencies": {
    "@babel/core": "^7.10.5",
    "@types/async-lock": "^1.1.3",
    "@types/electron-progressbar": "^1.2.2",
    "@types/electron-prompt": "^1.3.1",
    "@types/fs-extra": "^9.0.1",
    "@types/node": "^12.12.37",
    "@types/prosemirror-model": "^1.13.2",
    "@types/prosemirror-state": "^1.2.7",
    "@types/react": "^16.9.49",
    "@types/react-css-modules": "^4.6.2",
    "@types/react-dom": "^16.9.8",
    "@types/react-redux": "^7.1.18",
    "@types/rimraf": "^3.0.2",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^4.29.1",
    "@typescript-eslint/parser": "^4.29.1",
    "babel-loader": "^8.1.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "cross-env": "^7.0.2",
    "css-loader": "^3.6.0",
    "electron": "^14.0.0",
    "electron-connect": "^0.6.3",
    "electron-packager": "^15.3.0",
    "electron-rebuild": "^3.1.1",
    "electron-reload-webpack-plugin": "^2.0.4",
    "electron-winstaller": "^5.0.0",
    "eslint": "^7.32.0",
    "eslint-config-standardize": "^0.7.2",
    "eslint-plugin-import": "^2.24.0",
    "eslint-plugin-prettierx": "^0.14.0",
    "eslint-plugin-unicorn": "^36.0.0",
    "npm-run-all": "^4.1.5",
    "source-map-loader": "^1.1.3",
    "style-loader": "^1.2.1",
    "ts-loader": "^8.3.0",
    "typescript": "^4.3.5",
    "webpack": "^5.50.0",
    "webpack-cli": "^4.7.2",
    "webpack-merge": "^5.8.0"
  },
  "dependencies": {
    "@sosuisen/milkdown-core": "^4.11.2-alpha.3",
    "@sosuisen/milkdown-plugin-emoji": "^4.11.2-alpha.0",
    "@sosuisen/milkdown-plugin-history": "^4.11.1",
    "@sosuisen/milkdown-plugin-i18n": "^4.11.1",
    "@sosuisen/milkdown-plugin-listener": "^4.11.1",
    "@sosuisen/milkdown-plugin-prism": "^4.11.1",
    "@sosuisen/milkdown-plugin-slash": "^4.11.2-alpha.1",
    "@sosuisen/milkdown-plugin-tooltip": "^4.11.3-alpha.2",
    "@sosuisen/milkdown-preset-commonmark": "^4.11.3-alpha.25",
    "@sosuisen/milkdown-preset-gfm": "^4.11.2-alpha.28",
    "@sosuisen/milkdown-theme-nord": "^4.11.1",
    "async-lock": "^1.3.0",
    "babel-plugin-react-css-modules": "^5.2.6",
    "bezier-easing": "^2.1.0",
    "electron-context-menu": "^3.1.1",
    "electron-progressbar": "^2.0.1",
    "electron-prompt": "^1.6.2",
    "electron-squirrel-startup": "^1.0.0",
    "fs-extra": "^9.0.1",
    "git-documentdb": "^0.4.7-alpha.9",
    "hmtid": "^0.1.1",
    "prosemirror-model": "^1.14.3",
    "prosemirror-state": "^1.3.4",
    "prosemirror-view": "^1.20.1",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-redux": "^7.2.4",
    "redux": "^4.0.5",
    "redux-thunk": "^2.3.0",
    "rimraf": "^3.0.2",
    "rx-queue": "^0.12.6",
    "rxjs": "^7.3.0",
    "tslog": "^3.2.2",
    "typed-intl": "^1.0.3",
    "ulid": "^2.3.0"
  }
}
