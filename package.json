{
  "name": "tree-stickies",
  "productName": "TreeStickies",
  "version": "0.1.1",
  "description": "TreeStickies",
  "main": "dist/main.js",
  "scripts": {
    "/* initial-build */ ": "/* Use OpenJDK8 to build CKEditor4. Run following commands: git submodule update --init --recursive && cd ./external_modules/ckeditor4/ && ./dev/builder/build.sh && cd ../../ && npm i && mkdir dist && npm run compile-all && mkdir installer && npm run copy-static*/",
    "rebuild-native": "npx electron-rebuild -f",
    "update-ckeditor": "cd external_modules/ckeditor4/ && git pull origin major && cd ./dev/builder/ && build.sh && cd ../../../../ && git add external_modules/ckeditor4",
    "copy-static": "rm -r dist && cp -r html dist && cp -r external_modules/ckeditor4/dev/builder/release/ckeditor dist/ && cp -r external_modules/fontawesome dist/ && cp -r assets dist/ && cp ./node_modules/react/umd/react.production.min.js ./dist/settings/ && cp ./node_modules/react-dom/umd/react-dom.production.min.js ./dist/settings",
    "lint": "eslint --fix --ext .ts .",
    "tsc-iframe": "npx tsc -p ./tsconfig.iframe.json",
    "webpack-renderer": "npx webpack --config webpack.renderer.production.js",
    "webpack-renderer-debug": "cross-env NODE_ENV=development npx webpack --config webpack.renderer.development.js",
    "webpack-settings": "npx webpack --config webpack.settings.production.js",
    "tsc-main": "tsc -p tsconfig.main.production.json",
    "tsc-main-debug": "tsc -p tsconfig.main.development.json",
    "/* debug-main */": "/* Please launch [Main (tree-stickies)] from VSCode debugger after debug-main-and-renderer */",
    "/* debug-renderer */": "/* Please launch [Renderer (tree-stickies)] from VSCode debugger after tsc-iframe, debug-main-and-renderer and [Main (tree-stickies)] */",
    "debug-main-and-renderer": "npx npm-run-all --npm-path npm --parallel webpack-renderer-debug tsc-main-debug",
    "debug-settings": "cross-env NODE_ENV=development SETTINGS_DIALOG=open npx webpack --config webpack.settings.development.js --watch",
    "/* notice for compile-all */": "/* tsc in compile-main must be run finally because the .ts files under modules_common are temporally overwritten by tsc-iframe command and webpacks",
    "/* notice for compile-all (2) */": "/* Can it be parallelize?",
    "compile-all": "npx npm-run-all --npm-path npm --parallel tsc-iframe webpack-settings webpack-renderer tsc-main",
    "compile-all-clean": "npm run copy-static && npm run lint && npm run compile-all",
    "start-all": "npm run compile-all && npx electron .",
    "start-all-clean": "npm run compile-all-clean && npx electron .",
    "start": "npm run start-all",
    "make": "npm run copy-milkdown && npm run compile-all-clean && rm -rf ./installer/* && node --experimental-modules --experimental-json-modules packager.mjs",
    "link-milkdown-core": "cd node_modules/@milkdown && rm -rf core && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/core . && cd ../../",
    "link-milkdown-plugin-emoji": "cd node_modules/@milkdown && rm -rf plugin-emoji && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/plugin-emoji . && cd ../../",
    "link-milkdown-plugin-history": "cd node_modules/@milkdown && rm -rf plugin-history && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/plugin-history . && cd ../../",
    "link-milkdown-plugin-listener": "cd node_modules/@milkdown && rm -rf plugin-listener && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/plugin-listener . && cd ../../",
    "link-milkdown-preset-commonmark": "cd node_modules/@milkdown && rm -rf preset-commonmark && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/preset-commonmark . && cd ../../",
    "link-milkdown-theme-nord": "cd node_modules/@milkdown && rm -rf theme-nord && npx cross-env MSYS=winsymlinks:nativestrict ln -s ../../../milkdown/packages/theme-nord . && cd ../../",
    "link-milkdown": "npm run link-milkdown-core && npm run link-milkdown-plugin-emoji && npm run link-milkdown-plugin-history && npm run link-milkdown-plugin-listener && npm run link-milkdown-preset-commonmark && npm run link-milkdown-theme-nord",
    "copy-milkdown-core": "cd node_modules/@milkdown && rm -rf core && cp -rL ../../../milkdown/packages/core . && cd ../../",
    "copy-milkdown-plugin-emoji": "cd node_modules/@milkdown && rm -rf plugin-emoji && cp -rL ../../../milkdown/packages/plugin-emoji . && cd ../../",
    "copy-milkdown-plugin-history": "cd node_modules/@milkdown && rm -rf plugin-history && cp -rL ../../../milkdown/packages/plugin-history . && cd ../../",
    "copy-milkdown-plugin-listener": "cd node_modules/@milkdown && rm -rf plugin-listener && cp -rL ../../../milkdown/packages/plugin-listener . && cd ../../",
    "copy-milkdown-preset-commonmark": "cd node_modules/@milkdown && rm -rf preset-commonmark && cp -rL ../../../milkdown/packages/preset-commonmark . && cd ../../",
    "copy-milkdown-theme-nord": "cd node_modules/@milkdown && rm -rf theme-nord && cp -rL ../../../milkdown/packages/theme-nord . && cd ../../",
    "copy-milkdown": "npm run copy-milkdown-core && npm run copy-milkdown-plugin-emoji && npm run copy-milkdown-plugin-history && npm run copy-milkdown-plugin-listener && npm run copy-milkdown-preset-commonmark && npm run copy-milkdown-theme-nord"    
  },
  "keywords": [],
  "author": {
    "name": "Hidekazu Kubota",
    "email": "hidekazu.kubota@gmail.com"
  },
  "license": "UNLICENSED",
  "devDependencies": {
    "@babel/core": "^7.10.5",
    "@types/async-lock": "^1.1.3",
    "@types/ckeditor": "^4.9.10",
    "@types/electron-prompt": "^1.3.1",
    "@types/fs-extra": "^9.0.1",
    "@types/node": "^12.12.37",
    "@types/react": "^16.9.49",
    "@types/react-css-modules": "^4.6.2",
    "@types/react-dom": "^16.9.8",
    "@types/react-redux": "^7.1.18",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^4.29.1",
    "@typescript-eslint/parser": "^4.29.1",
    "babel-loader": "^8.1.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "cross-env": "^7.0.2",
    "css-loader": "^3.6.0",
    "electron": "^14.0.0",
    "electron-connect": "^0.6.3",
    "electron-packager": "^15.3.0",
    "electron-rebuild": "^3.1.1",
    "electron-reload-webpack-plugin": "^2.0.4",
    "electron-winstaller": "^5.0.0",
    "eslint": "^7.32.0",
    "eslint-config-standardize": "^0.7.2",
    "eslint-plugin-import": "^2.24.0",
    "eslint-plugin-prettierx": "^0.14.0",
    "npm-run-all": "^4.1.5",
    "source-map-loader": "^1.1.3",
    "style-loader": "^1.2.1",
    "ts-loader": "^8.3.0",
    "typescript": "^4.3.5",
    "webpack": "^5.50.0",
    "webpack-cli": "^4.7.2",
    "webpack-merge": "^5.8.0"
  },
  "dependencies": {
    "@emotion/babel-plugin": "^11.3.0",
    "@milkdown/core": "^4.11.2",
    "@milkdown/plugin-emoji": "^4.11.2",
    "@milkdown/plugin-history": "^4.11.2",
    "@milkdown/plugin-listener": "^4.11.2",
    "@milkdown/preset-commonmark": "^4.11.2",
    "@milkdown/theme-nord": "^4.11.2",
    "async-lock": "^1.3.0",
    "babel-plugin-react-css-modules": "^5.2.6",
    "electron-context-menu": "^2.3.0",
    "electron-prompt": "^1.6.2",
    "electron-squirrel-startup": "^1.0.0",
    "fs-extra": "^9.0.1",
    "git-documentdb": "^0.4.6",
    "lodash.toarray": "^4.4.0",
    "prosemirror-schema-basic": "^1.1.2",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-redux": "^7.2.4",
    "redux": "^4.0.5",
    "redux-thunk": "^2.3.0",
    "rx-queue": "^0.12.6",
    "rxjs": "^7.3.0",
    "typed-intl": "^1.0.3",
    "ulid": "^2.3.0"
  }
}
